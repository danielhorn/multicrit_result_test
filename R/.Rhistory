devtools::install_github("danielhorn/multicrit_result_test")
install.packages(devtools)
install.packages("devtools")
devtools::install_github("danielhorn/multicrit_result_test")
?ggplot
??ggplot
??assert
checkmate::testSetEqual(c(1,2,3),c(3,2,1))
assertSetEqual(c(1,2,3,4),1:(2+2))
checkmate::assertSetEqual(c(1,2,3,4),1:(2+2))
load(checkmate)
?package
library(checkmate)
assertSetEqual(c(1,2,3,4),1:(2+2))
assertSetEqual(c(1,2,3,4,2),1:(2+2))
algo.order = c(1,2,3,4,2)
assertInteger(algo.order, unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
N = 2; M = 3
assertInteger(algo.order, unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
algo.order = as.integer(c(1,2,3,4,2))
assertInteger(algo.order, unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
algo.order = as.integer(c(1,2,3,4))
M=2
assertInteger(algo.order, unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
algo.order = as.integer(c(1,2,4,3))
assertInteger(algo.order, unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
algo.order(1:4)
algo.order= 1:4
assertInt(algo.order, unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
assertInteger(as.integer(algo.order), unique = TRUE, len = (N+M))
assertSetEqual(algo.order,1:(N+M))
library(MOSAP)
source('~/multicrit_result_test/R/generateValidationData.R')
